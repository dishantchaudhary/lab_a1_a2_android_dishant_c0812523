// Generated by view binder compiler. Do not edit!
package com.example.lab_a1_a2_android_dishant_c0812523.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lab_a1_a2_android_dishant_c0812523.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProviderItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgVEmail;

  @NonNull
  public final ImageView imgVMap;

  @NonNull
  public final ImageView imgVPhone;

  @NonNull
  public final TextView txvProviderEmail;

  @NonNull
  public final TextView txvProviderName;

  @NonNull
  public final TextView txvProviderPhone;

  private ProviderItemBinding(@NonNull CardView rootView, @NonNull ImageView imgVEmail,
      @NonNull ImageView imgVMap, @NonNull ImageView imgVPhone, @NonNull TextView txvProviderEmail,
      @NonNull TextView txvProviderName, @NonNull TextView txvProviderPhone) {
    this.rootView = rootView;
    this.imgVEmail = imgVEmail;
    this.imgVMap = imgVMap;
    this.imgVPhone = imgVPhone;
    this.txvProviderEmail = txvProviderEmail;
    this.txvProviderName = txvProviderName;
    this.txvProviderPhone = txvProviderPhone;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ProviderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProviderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.provider_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProviderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgVEmail;
      ImageView imgVEmail = ViewBindings.findChildViewById(rootView, id);
      if (imgVEmail == null) {
        break missingId;
      }

      id = R.id.imgVMap;
      ImageView imgVMap = ViewBindings.findChildViewById(rootView, id);
      if (imgVMap == null) {
        break missingId;
      }

      id = R.id.imgVPhone;
      ImageView imgVPhone = ViewBindings.findChildViewById(rootView, id);
      if (imgVPhone == null) {
        break missingId;
      }

      id = R.id.txvProviderEmail;
      TextView txvProviderEmail = ViewBindings.findChildViewById(rootView, id);
      if (txvProviderEmail == null) {
        break missingId;
      }

      id = R.id.txvProviderName;
      TextView txvProviderName = ViewBindings.findChildViewById(rootView, id);
      if (txvProviderName == null) {
        break missingId;
      }

      id = R.id.txvProviderPhone;
      TextView txvProviderPhone = ViewBindings.findChildViewById(rootView, id);
      if (txvProviderPhone == null) {
        break missingId;
      }

      return new ProviderItemBinding((CardView) rootView, imgVEmail, imgVMap, imgVPhone,
          txvProviderEmail, txvProviderName, txvProviderPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
